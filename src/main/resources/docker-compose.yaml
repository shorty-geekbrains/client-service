version: '3.3'

services:
  front-service:
    container_name: front-service
    build:
      context: docker-front-service
      dockerfile: Dockerfile
    hostname: front-service
    environment:
      - SPRING_APPLICATION_NAME=front-service
    image: front-service:latest
    ports:
      - '8190:8190'
    networks:
      spring-cloud-network:
        aliases:
          - front-service
  video-service:
    container_name: video-service
    build:
      context: docker-video-service
      dockerfile: Dockerfile
    hostname: video-service
    environment:
      - SPRING_APPLICATION_NAME=video-service
    image: video-service:latest
    ports:
      - '8189:8189'
    networks:
      spring-cloud-network:
        aliases:
          - video-service
  client-service:
    container_name: client-service
    build:
      context: docker-client-service
      dockerfile: Dockerfile
    hostname: client-service
    environment:
      - SPRING_APPLICATION_NAME=client-service
      - DATABASE_HOST=db
    image: client-service:latest
    ports:
      - '8191:8191'
    depends_on:
      - db
    networks:
      spring-cloud-network:
        aliases:
          - client-service
  db:
    image: postgres
    restart: always
    hostname: db
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: 1234
      POSTGRES_DB: authdb
    ports:
      - "5432:5432"
    networks:
      spring-cloud-network:
        aliases:
          - db
  gateway-service:
    container_name: gateway-service
    build:
      context: docker-gateway-service
      dockerfile: Dockerfile
    hostname: gateway-service
    environment:
      - SPRING_APPLICATION_NAME=gateway-service
      - SPRING_PROFILES_ACTIVE=deploy
    image: gateway-service:latest
    ports:
      - '8188:8188'
    networks:
      spring-cloud-network:
        aliases:
          - gateway-service
    depends_on:
      - video-service
networks:
  spring-cloud-network:
    driver: bridge